-- input.go --
package pkg

type (
	// S is a struct
	S struct{
		// FieldA is a field
		FieldA string `json:"field_a"`

		// FieldB is a field
		FieldB string
	}

	// T is a struct too
	T struct {
	}
)

// PtrMethod is a pointer method
func (s *S) PtrMethod(a string){}

// Method is a method
func (s S) Method(a string)(string){return ""}

// U is a struct not in a group.
type U struct{}

-- expected.go --
[
	{
		"name": "S",
		"doc_comment": "S is a struct\n",
		"fields": [
			{
				"name": "FieldA",
				"doc_comment": "FieldA is a field\n",
				"type": "string",
				"tags": [
					{
						"name": "json",
						"value": "field_a"
					}
				]
			},
			{
				"name": "FieldB",
				"doc_comment": "FieldB is a field\n",
				"type": "string"
			}
		],
		"methods": [
			{
				"name": "PtrMethod",
				"doc_comment": "PtrMethod is a pointer method\n",
				"parameters": [
					{
						"name": "a",
						"type": "string"
					}
				]
			},
			{
				"name": "Method",
				"doc_comment": "Method is a method\n",
				"parameters": [
					{
						"name": "a",
						"type": "string"
					}
				],
				"results": [
					{
						"type": "string"
					}
				]
			}
		]
	},
	{
		"name": "T",
		"doc_comment": "T is a struct too\n"
	},
	{
		"name": "U",
		"doc_comment": "U is a struct not in a group.\n"
	}
]
